import pandas as pd
import sklearn
import matplotlib.pyplot as plt
from sklearn import preprocessing
import numpy as np
data=pd.read_csv("blackfriday-editednewupdates.csv")
print (data.head())
df=data.fillna(0)
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression 
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import LabelEncoder
from sklearn import metrics
from sklearn.metrics import  accuracy_score
#feature_col=['Product_ID','Gender','Age']

pro=int(input("Enter the Product_ID: "))
age1=int(input("Enter the Age:"))
gen=int(input("Enter the Gender:"))



p=df['Product_ID'].values
le=preprocessing.LabelEncoder()
p_encoded=le.fit_transform(p)
p_encode=p_encoded.tolist()
print ("product_id:",p_encode)
g=df['Gender'].values
g_encoded=le.fit_transform(g)
g_encode=g_encoded.tolist()
print ("Gender:",g_encode)
a=df['Age'].values
a_encoded=le.fit_transform(a)
a_encode=a_encoded.tolist()
print ("age:",a_encode)
x =list(zip(p_encoded,g_encoded,a_encoded))
print(x)


print ("product 1")
y=df['Product_Category_1'].values
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25)
clf=LinearRegression()
print (clf)
clf=clf.fit(x_train,y_train)
yp1=clf.predict(x_test)
yp1=yp1.tolist()
print ("predicted y")
print (yp1)
ypp1=clf.predict([[pro,age1,gen]])
print(ypp1)

print ("product 2")
y1=df['Product_Category_2'].values
x_train,x_test,y_train,y_test=train_test_split(x,y1,test_size=0.25)
clf1=LinearRegression()
print (clf1)
clf1.fit(x_train,y_train)
yp2=clf1.predict(x_test)
yp2=yp2.tolist()
print ("predicted y")
print (yp2)
ypp2=clf1.predict([[pro,age1,gen]])
print(ypp2)

print("product 3")
y5=df['Product_Category_3'].values
x_train,x_test,y_train,y_test=train_test_split(x,y5,test_size=0.25)
clf=LinearRegression()
print (clf)
clf=clf.fit(x_train,y_train)
yp3=clf.predict(x_test)
yp3=yp3.tolist()
print ("predicted y")
print (yp3)
ypp3=clf.predict([[pro,age1,gen]])
print(ypp3)

s=df.groupby('Age').mean()
#print(s)
p=['0-17','18-25','26-35','36-45','46-50','51-55','55+']
colors = ["#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#8c564b","#aaaaa3","#aedaa2"]
#explode = (0.1, 0, 0, 0, 0, 0, 0)  
plt.pie(s['Product_Category_1'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.title("sales prediction on black friday")
plt.show()
plt.pie(s['Product_Category_2'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.title("sales prediction on black friday")
plt.show()
plt.pie(s['Product_Category_3'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.title("sales prediction on black friday")
plt.show()

df['y_pred_1']=pd.Series(yp1)
df['y_pred_2']=pd.Series(yp2)
df['y_pred_3']=pd.Series(yp3)
df=df.fillna(0)
#print(df)

s=df.groupby('Age').mean()
#print(s)

plt.pie(s['y_pred_1'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.show()
plt.pie(s['y_pred_2'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.show()
plt.pie(s['y_pred_3'],labels=p,colors=colors,autopct='%1.1f%%',shadow=True,startangle=140)
plt.show()